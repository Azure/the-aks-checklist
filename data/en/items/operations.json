[
  {
    "title": "Keep nodes up to date and patched",
    "priority": "High",
    "description": "AKS supports upgrading the images on a node so you're up to date with the newest OS and runtime updates. AKS provides one new image per week with the latest updates, so it's beneficial to upgrade your node's images regularly for the latest features, including Linux or Windows patches",
    "detail": "Using automation and this method will ensure that all your nodes are consistently up to date with last features/fixes/patchs, without having to upgrade the kubernetes version. An alternative could be to use Kured to reboot nodes with pending reboots but it will only patch the Operating System, not the AKS layer",
    "documentation": [
      {
        "title": "Azure Kubernetes Service (AKS) node image upgrades",
        "url": "https://docs.microsoft.com/azure/aks/node-image-upgrade"
      },
      {
        "title": "Process Linux node updates and reboots using Kured (not recommended because it can behave incorrectly in some cluster configurations like autoscaling)",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-cluster-security#process-linux-node-updates-and-reboots-using-kured"
      },
      {
        "title": "Use Event Grid to know when an upgrade is available",
        "url": "https://docs.microsoft.com/azure/aks/quickstart-event-grid"
      }
    ],
    "tools": [
      {
        "title": "Kured (KUbernetes REboot Daemon)",
        "url": "https://github.com/weaveworks/kured"
      }
    ],
    "tags": [
      "all",
      "security",
      "operations",
      "windows"
    ]
  },
  {
    "title": "Use System Node Pools",
    "priority": "Medium",
    "description": "Manage system node pools in Azure Kubernetes Service (AKS)",
    "documentation": [
      {
        "title": "AKS System Pools",
        "url": "https://docs.microsoft.com/azure/aks/use-system-pools"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Use placement proximity group to improve performance",
    "priority": "Low",
    "description": "When deploying your application in Azure, spreading Virtual Machine (VM) instances across regions or availability zones creates network latency, which may impact the overall performance of your application. A proximity placement group is a logical grouping used to make sure Azure compute resources are physically located close to each other",
    "detail": "Be careful, by using PPG on a nodepool, you reduce the average SLA of your application since they don't rely on availability zones anymore",
    "documentation": [
      {
        "title": "Reduce latency with proximity placement groups",
        "url": "https://docs.microsoft.com/azure/aks/reduce-latency-ppg"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Customize your clusters with extensions",
    "priority": "Low",
    "description": "Cluster extensions provides an Azure Resource Manager driven experience for installation and lifecycle management of services like Azure Machine Learning (ML) on an AKS cluster. ",
    "detail": "This feature enables:Azure Resource Manager-based deployment of extensions, including at-scale deployments across AKS clusters but also lifecycle management of the extension (Update, Delete) from Azure Resource Manager.",
    "documentation": [
      {
        "title": "Customize node configuration for Azure Kubernetes Service (AKS) node pools",
        "url": "https://docs.microsoft.com/en-gb/azure/aks/cluster-extensions"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Customize the name of the MC_ resource group",
    "priority": "Low",
    "description": "When creating a new AKS cluster, the MC_ resource group is created by default. You can customize the name of the MC_ resource group.",
    "documentation": [
      {
        "title": "Custom resource group name",
        "url": "https://learn.microsoft.com/en-gb/azure/aks/cluster-configuration#custom-resource-group-name"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Securely connect to nodes through a bastion host",
    "priority": "Medium",
    "description": "Don't expose remote connectivity to your AKS nodes. Create a bastion host, or jump box, in a management virtual network. Use the bastion host to securely route traffic into your AKS cluster to remote management tasks.",
    "documentation": [
      {
        "title": "Securely connect to nodes through a bastion host",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-network#securely-connect-to-nodes-through-a-bastion-host"
      }
    ],
    "tags": [
      "all",
      "security",
      "operations"
    ]
  },
  {
    "title": "Regularly check for cluster issues ",
    "priority": "Medium",
    "description": "Regularly run the latest version of cluster scanning open source tool to detect issues in your cluster. For instance, if you apply resource quotas on an existing AKS cluster, run kubestriker first to find pods that don't have resource requests and limits defined.",
    "tools": [
      {
        "title": "AKS Periscope",
        "url": "https://github.com/Azure/aks-periscope"
      },
      {
        "title": "kubestriker",
        "url": "https://www.kubestriker.io/"
      },
      {
        "title": "kubebench",
        "url": "https://github.com/aquasecurity/kube-bench"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Provision a log aggregation tool",
    "priority": "High",
    "description": "Ensure that you are always aware of what happens in your cluster. Monitor the health of the cluster (nodes, server) but also the pods",
    "documentation": [
      {
        "title": "Azure Monitor for AKS",
        "url": "https://docs.microsoft.com/azure/azure-monitor/insights/container-insights-analyze"
      },
      {
        "title": "Azure Managed Grafana",
        "url": "https://azure.microsoft.com/services/managed-grafana/"
      }
    ],
    "tools": [
      {
        "title": "Elastic Cloud",
        "url": "https://www.elastic.co/elastic-cloud-kubernetes"
      },
      {
        "title": "Datadog",
        "url": "https://www.datadoghq.com/"
      }
    ],
    "tags": [
      "all",
      "monitoring",
      "operations"
    ]
  },
  {
    "title": "Enable master node logs",
    "priority": "High",
    "description": "To help troubleshoot your application and services, you may need to view the logs generated by the master components. Be aware that if you don't enable these logs, there is no way for Microsoft to retrieve them for you",
    "documentation": [
      {
        "title": "Enable and review Kubernetes master node logs",
        "url": "https://docs.microsoft.com/azure/aks/view-control-plane-logs"
      }
    ],
    "tags": [
      "all",
      "monitoring",
      "operations"
    ]
  },
  {
    "title": "Collect metrics",
    "priority": "High",
    "description": "If default integration can collect telemetry data and basic metrics (CPU/Memory), they don't collect custom metrics and more detailed information. It's often necessary to install a 3rd party software (prometheus is recommend within Kubernetes) and they store these metrics to exploit them.",
    "detail": "Typically, to use Prometheus, you need to set up and manage a Prometheus server with a store. By integrating with Azure Monitor, a Prometheus server is not required. You just need to expose the Prometheus metrics endpoint through your exporters or pods (application), and the containerized agent for Azure Monitor for containers can scrape the metrics for you.",
    "documentation": [
      {
        "title": "Configure scraping of Prometheus metrics",
        "url": "https://docs.microsoft.com/azure/azure-monitor/insights/container-insights-prometheus-integration"
      },
      {
        "title": "Deploying ELK",
        "url": "https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-quickstart.html"
      }
    ],
    "tags": [
      "all",
      "monitoring",
      "operations"
    ]
  },
  {
    "title": "Configure distributed tracing",
    "priority": "Low",
    "description": "Distributed tracing, also called distributed request tracing, is a method used to profile and monitor applications, especially those built using a microservices architecture. Distributed tracing helps pinpoint where failures occur and what causes poor performance.",
    "documentation": [
      {
        "title": "Solution for onboarding Kubernetes/AKS workloads onto Application Insights monitoring.",
        "url": "https://github.com/microsoft/Application-Insights-K8s-Codeless-Attach"
      },
      {
        "title": "Zero instrumentation application monitoring for Kubernetes hosted applications (deprecated)",
        "url": "https://docs.microsoft.com/azure/azure-monitor/app/kubernetes"
      }
    ],
    "tags": [
      "all",
      "monitoring",
      "operations"
    ]
  },
  {
    "title": "Set Upgrade Channel",
    "priority": "Medium",
    "description": "In addition to manually upgrading a cluster, you can set an auto-upgrade channel on your cluster",
    "documentation": [
      {
        "title": "Set AKS auto-upgrade channel",
        "url": "https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Enable cluster autoscaling",
    "priority": "Medium",
    "description": "To keep up with application demands in Azure Kubernetes Service (AKS), you may need to adjust the number of nodes that run your workloads. The cluster autoscaler component can watch for pods in your cluster that can't be scheduled because of resource constraints.",
    "detail": "You can enable autoscaling module per node pool but only create one mutual autoscale profile",
    "documentation": [
      {
        "title": "AKS Autoscaler",
        "url": "https://docs.microsoft.com/azure/aks/cluster-autoscaler"
      }
    ],
    "tags": [
      "all",
      "resources",
      "finops"
    ]
  },
  {
    "title": "Control the compliance with Azure Policies",
    "priority": "Medium",
    "description": "Azure Policy integrates with the Azure Kubernetes Service (AKS) to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
    "documentation": [
      {
        "title": "Azure Policies for AKS",
        "url": "https://docs.microsoft.com/azure/governance/policy/concepts/rego-for-aks"
      }
    ],
    "tools": [
      {
        "title": "Gatekeeper",
        "url": "https://github.com/open-policy-agent/gatekeeper"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Use GitOps to deploy workloads in your cluster",
    "priority": "High",
    "description": "GitOps works by using Git as a single source of truth for declarative infrastructure and applications",
    "detail": "On Azure you can for instance use Azure Arc for Kubernetes but also directly GitOps addon for AKS",
    "documentation": [
      {
        "title": "Use Flux v2 addon for AKS",
        "url": "https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/tutorial-use-gitops-flux2"
      },
      {
        "title": "What is Azure Arc enabled Kubernetes?",
        "url": "https://docs.microsoft.com/azure/azure-arc/kubernetes/overview"
      },
      {
        "title": "Guide To GitOps",
        "url": "https://www.weave.works/technologies/gitops"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Implement CI/CD to deploy workloads in your cluster",
    "priority": "High",
    "description": "Instead of GitOps (or in addition) you can use CI/CD to deploy workloads/tools in your cluster",
    "documentation": [
      {
        "title": "Automated Deployments for Azure Kubernetes Service (Preview)",
        "url": "https://learn.microsoft.com/en-gb/azure/aks/automated-deployments"
      },
      {
        "title": "Build and deploy to Azure Kubernetes Service with Azure Pipelines",
        "url": "https://learn.microsoft.com/en-gb/azure/aks/devops-pipeline?pivots=pipelines-yaml"
      },
      {
        "title": "Tutorial: Deploy from GitHub to Azure Kubernetes Service using Jenkins",
        "url": "https://learn.microsoft.com/en-gb/azure/developer/jenkins/deploy-from-github-to-aks"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Make your life easier with K8S Tools",
    "priority": "Medium",
    "description": "The Kubernetes ecosystem is strengthened by many tools that make operating it easier.  Here's a few",
    "tools": [
      {
        "title": "Lens",
        "url": "https://k8slens.dev/"
      },
      {
        "title": "Helm",
        "url": "https://helm.sh"
      },
      {
        "title": "kubectl aliases",
        "url": "https://github.com/ahmetb/kubectl-aliases"
      },
      {
        "title": "kubectx",
        "url": "https://github.com/ahmetb/kubectx"
      },
      {
        "title": "k9s",
        "url": "https://k9scli.io/"
      }
    ],
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Don't use the default namespace",
    "priority": "Medium",
    "description": "It's recommended to keep all applications in a namespace other than default",
    "tags": [
      "all",
      "operations"
    ]
  },
  {
    "title": "Apply different types of labels to all resources",
    "priority": "Low",
    "description": "A common set of labels allows tools to work interoperably, describing objects in a common manner that all tools can understand. For instance, resources should have technical, business and security labels. ",
    "documentation": [
      {
        "title": "Recommended labels",
        "url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/"
      }
    ],
    "tags": [
      "all",
      "multi-tenancy",
      "operations"
    ]
  },
  {
    "title": "Fine tune your node configuration",
    "priority": "Low",
    "description": "Customizing your node configuration allows you to configure or tune your operating system (OS) settings or the kubelet parameters to match the needs of the workloads.",
    "detail": "When you create an AKS cluster or add a node pool to your cluster, you can customize a subset of commonly used OS and kubelet settings.",
    "documentation": [
      {
        "title": "Customize node configuration for Azure Kubernetes Service (AKS) node pools",
        "url": "https://docs.microsoft.com/azure/aks/custom-node-configuration"
      }
    ],
    "tags": [
      "all"
    ]
  }
]